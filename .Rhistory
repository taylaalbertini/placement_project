projectDir <- "/Users/taylaalbertini/Desktop/R studio/count_preprocessing/rawData/combinedRaw"
import_mean_male_cpms <- file.path(projectDir, "mean_male_cpms.csv")
gencode_file <- file.path(projectDir, "gencode_v32_gene_id_symbol_chr_biotype.csv")
# import mean male cpms data
mean_male_cpms <- read_delim(file = import_mean_male_cpms,
col_names = TRUE,
delim = ",")
# remove the first column - "Sample" no.
mean_male_cpms <- mean_male_cpms[,-1]
# copy of mean_cpms for subsequent analysis
mean_male_cpms_cp <- as.data.frame(mean_male_cpms)
#gencode
gencode <- read_delim(file = gencode_file,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
# make calculate_rank a function
calculate_rank <- function(x) {
return(rank(-x))
}
# ranking normalised cpms by female_tissue
mean_male_cpms[, paste0(names(mean_male_cpms)[-1], "_Rank")] <- apply(mean_male_cpms [, -1, drop = FALSE], 2, calculate_rank)
# create a df selecting just for _Rank
ranked_male_cpms <- data.frame(mean_male_cpms) %>%
dplyr::select(matches("_Rank"))
# isolating all instances where placenta ranked 4th in tissue ranking
## make samples a column
ranked_male_cpms <- as.data.frame(ranked_male_cpms) %>%
tibble::rownames_to_column("Sample")
## create a dataframe with geneid in rows and samples in columns
ranked_male <- t(ranked_male_cpms) %>%
data.frame() %>%
tibble::rownames_to_column("geneid")
## delete the Sample row
ranked_male <- ranked_male[-1,]
## tidy up the column names
colnames(ranked_male) <- gsub("X1", "Male_Heart", colnames(ranked_male))
colnames(ranked_male) <- gsub("X2", "Male_Muscle", colnames(ranked_male))
colnames(ranked_male) <- gsub("X3", "Male_Placenta", colnames(ranked_male))
colnames(ranked_male) <- gsub("X4", "Male_Stomach", colnames(ranked_male))
## select for the instances where
placenta_male_4th <- subset(ranked_male, Male_Placenta == "4")
# remove "_Rank" from placenta_4th
# remove placenta column
# convert into long form
rank_comparison_male <- tidyr::separate(placenta_male_4th,col = geneid,into = c("geneid","right")) %>%
dplyr::select(.,-right) %>%
dplyr::select(.,-Male_Placenta) %>%
tidyr::gather(., Tissue, Rank, Male_Heart, Male_Muscle, Male_Stomach)
# nCPMs_female
## remove columns ending in "_Rank"
## create a dataframe with geneid in rows and samples in columns
## removed placenta column
nCPMs_male <- t(mean_male_cpms_cp) %>%
data.frame() %>%
tibble::rownames_to_column("geneid") %>%
dplyr::select(.,-X3)
## delete the Sample row
nCPMs_male <- nCPMs_male[-1,]
## tidy up the column names
colnames(nCPMs_male) <- gsub("X1", "Male_Heart", colnames(nCPMs_male))
colnames(nCPMs_male) <- gsub("X2", "Male_Muscle", colnames(nCPMs_male))
colnames(nCPMs_male) <- gsub("X4", "Male_Stomach", colnames(nCPMs_male))
# convert nCPM into long form
nCPMs_male <- tidyr::gather(nCPMs_male, Tissue, nCPMs, Male_Heart, Male_Muscle, Male_Stomach)
# left joining the nCPMs_male with rank_comparison
male_analysis <- dplyr::left_join(rank_comparison_male, nCPMs_male, copy = TRUE, by = join_by(geneid, Tissue))
# filter for rows with rank =3 and nCPM = >1
third_rank_male <- male_analysis[male_analysis$Rank == 3 & male_analysis$nCPMs > 1,]
# create df in long form with all genes placenta is ranked 4th in
male_ratio <- tidyr::separate(placenta_male_4th,col = geneid,into = c("geneid","right")) %>%
dplyr::select(.,-right) %>%
dplyr::select(.,-c("Male_Heart", "Male_Stomach", "Male_Muscle")) %>%
tidyr::gather(., Tissue, Rank, Male_Placenta)
# create nCPM
nCPMs2_male <- t(mean_male_cpms_cp) %>%
data.frame() %>%
tibble::rownames_to_column("geneid") %>%
dplyr::select(.,-c("X1", "X2", "X4"))
## delete the Sample row
nCPMs2_male <- nCPMs2_male[-1,]
## tidy up the column names
colnames(nCPMs2_male) <- gsub("X3", "nCPMs_4", colnames(nCPMs2_male))
# left join nCPMs2_male with female_ratio
nCPM4_male_table <- dplyr::left_join(male_ratio, nCPMs2_male, copy = TRUE, by = join_by(geneid))
# left join nCPM3_nCPM4_male_table to third_rank_fulfill by geneid
nCPM3_nCPM4_male_table <- dplyr::left_join(third_rank_male, nCPM4_male_table, copy = TRUE, by = join_by(geneid))
# convert nCPMs and nCPMs_4 to numeric from character
# create a new column nCPM3/nCPM4
nCPM3_nCPM4_male_table$nCPMs_4 <- as.numeric(nCPM3_nCPM4_male_table$nCPMs_4)
nCPM3_nCPM4_male_table$nCPMs <- as.numeric(nCPM3_nCPM4_male_table$nCPMs)
nCPM3_nCPM4_male_table$nCPM_ratio <- nCPM3_nCPM4_male_table$nCPMs / nCPM3_nCPM4_male_table$nCPMs_4
# select for nCPM_ratio > 3
placenta_male_depleted <- nCPM3_nCPM4_male_table[nCPM3_nCPM4_male_table$nCPM_ratio >3,]
# replace geneid with ensembl
colnames(placenta_male_depleted) <- gsub("geneid", "ensembl", colnames(placenta_male_depleted))
# left join genecode and placenta_male_depleted
placenta_male_annotated <- dplyr::left_join(placenta_male_depleted, gencode, by = join_by(ensembl))
# tidy up placenta_male_annotated
placenta_male_annotated <- dplyr::select(placenta_male_annotated, -c("Rank.x", "Rank.y"))
library(pheatmap)
# converting mean_tissue_cpms to geneid in rows
data_male <- t(mean_male_cpms) %>%
data.frame() %>%
tibble::rownames_to_column("geneid")
colnames(data_male) <- gsub("X1", "Male Heart", colnames(data_male))
colnames(data_male) <- gsub("X2", "Male Muscle", colnames(data_male))
colnames(data_male) <- gsub("X3", "Male Placenta", colnames(data_male))
colnames(data_male) <- gsub("X4", "Male Stomach", colnames(data_male))
data_male <- data_male[-1,]
# make data_male numeric
data_male$Heart <- as.numeric(data_male$Heart)
data_male$`Male Heart` <- as.numeric(data_male$`Male Heart`)
data_male$`Male Muscle` <- as.numeric(data_male$Muscle)
data_male$`Male Muscle` <- as.numeric(data_male$`Male Muscle`)
data_male$`Male Stomach` <- as.numeric(data_male$`Male Stomach`)
data_male$`Male Placenta` <- as.numeric(data_male$`Male Placenta`)
# convert geneid column into rows
data_male_2 <- data_male[,-1]
rownames(data_male_2) <- data_male[,1]
data_2_male_relocate <- dplyr::relocate(data_male_2, Placenta, .after = Stomach)
data_2_male_relocate <- dplyr::relocate(data_male_2, `Male Placenta`, .after = Stomach)
data_2_male_relocate <- dplyr::relocate(data_male_2, `Male Placenta`, .after = `Male Stomach`)
# descending order nCPMs
placenta_male_descending <- placenta_male_annotated %>%
dplyr::arrange(desc(nCPMs_4))
# create heatmap
pheatmap(log10(data_2_male_relocate[placenta_male_descending$ensembl,] + 0.001),
cluster_cols = FALSE,
cluster_rows = FALSE,
show_rownames = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/count_preprocessing/rawData/combinedRaw"
import_mean_female_cpms <- file.path(projectDir, "mean_female_cpms.csv")
gencode_file <- file.path(projectDir, "gencode_v32_gene_id_symbol_chr_biotype.csv")
# import the mean female cpms table
mean_female_cpms <- read_delim(file = import_mean_female_cpms,
col_names = TRUE,
delim = ",")
# remove the first column - "Sample" no.
mean_female_cpms <- mean_female_cpms[,-1]
# copy of mean_cpms for subsequent analysis
mean_female_cpms_cp <- as.data.frame(mean_female_cpms)
#gencode
gencode <- read_delim(file = gencode_file,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
# make calculate_rank a function
calculate_rank <- function(x) {
return(rank(-x))
}
# ranking normalised cpms by female_tissue
mean_female_cpms[, paste0(names(mean_female_cpms)[-1], "_Rank")] <- apply(mean_female_cpms [, -1, drop = FALSE], 2, calculate_rank)
# craete a df selecting just for _Rank
ranked_female_cpms <- data.frame(mean_female_cpms) %>%
dplyr::select(matches("_Rank"))
# isolating all instances where placenta ranked 4th in tissue ranking
## make samples a column
ranked_female_cpms <- as.data.frame(ranked_female_cpms) %>%
tibble::rownames_to_column("Sample")
## create a dataframe with geneid in rows and samples in columns
ranked_female <- t(ranked_female_cpms) %>%
data.frame() %>%
tibble::rownames_to_column("geneid")
## delete the Sample row
ranked_female <- ranked_female[-1,]
## tidy up the column names
colnames(ranked_female) <- gsub("X1", "Female_Heart", colnames(ranked_female))
colnames(ranked_female) <- gsub("X2", "Female_Muscle", colnames(ranked_female))
colnames(ranked_female) <- gsub("X3", "Female_Placenta", colnames(ranked_female))
colnames(ranked_female) <- gsub("X4", "Female_Stomach", colnames(ranked_female))
## select for the instances where
placenta_female_4th <- subset(ranked_female, Female_Placenta == "4")
# remove "_Rank" from placenta_4th
# remove placenta column
# convert into long form
rank_comparison_female <- tidyr::separate(placenta_female_4th,col = geneid,into = c("geneid","right")) %>%
dplyr::select(.,-right) %>%
dplyr::select(.,-Female_Placenta) %>%
tidyr::gather(., Tissue, Rank, Female_Heart, Female_Muscle, Female_Stomach)
# nCPMs_female
## remove columns ending in "_Rank"
## create a dataframe with geneid in rows and samples in columns
## removed placenta column
nCPMs_female <- t(mean_female_cpms_cp) %>%
data.frame() %>%
tibble::rownames_to_column("geneid") %>%
dplyr::select(.,-X3)
## delete the Sample row
nCPMs_female <- nCPMs_female[-1,]
## tidy up the column names
colnames(nCPMs_female) <- gsub("X1", "Female_Heart", colnames(nCPMs_female))
colnames(nCPMs_female) <- gsub("X2", "Female_Muscle", colnames(nCPMs_female))
colnames(nCPMs_female) <- gsub("X4", "Female_Stomach", colnames(nCPMs_female))
# convert nCPM into long form
nCPMs_female <- tidyr::gather(nCPMs_female, Tissue, nCPMs, Female_Heart, Female_Muscle, Female_Stomach)
# left joining the nCPMs_female with rank_comparison
female_analysis <- dplyr::left_join(rank_comparison_female, nCPMs_female, copy = TRUE, by = join_by(geneid, Tissue))
# filter for rows with rank =3 and nCPM = >1
third_rank_female <- female_analysis[female_analysis$Rank == 3 & female_analysis$nCPMs > 1,]
# create df in long form with all genes placenta is ranked 4th in
female_ratio <- tidyr::separate(placenta_female_4th,col = geneid,into = c("geneid","right")) %>%
dplyr::select(.,-right) %>%
dplyr::select(.,-c("Female_Heart", "Female_Stomach", "Female_Muscle")) %>%
tidyr::gather(., Tissue, Rank, Female_Placenta)
# create nCPM
nCPMs2_female <- t(mean_female_cpms_cp) %>%
data.frame() %>%
tibble::rownames_to_column("geneid") %>%
dplyr::select(.,-c("X1", "X2", "X4"))
## delete the Sample row
nCPMs2_female <- nCPMs2_female[-1,]
## tidy up the column names
colnames(nCPMs2_female) <- gsub("X3", "nCPMs_4", colnames(nCPMs2_female))
# left join nCPMs2_female with female_ratio
nCPM4_female_table <- dplyr::left_join(female_ratio, nCPMs2_female, copy = TRUE, by = join_by(geneid))
# left join nCPM3_nCPM4_female_table to third_rank_fulfill by geneid
nCPM3_nCPM4_female_table <- dplyr::left_join(third_rank_female, nCPM4_female_table, copy = TRUE, by = join_by(geneid))
# convert nCPMs and nCPMs_4 to numeric from character
# create a new column nCPM3/nCPM4
nCPM3_nCPM4_female_table$nCPMs_4 <- as.numeric(nCPM3_nCPM4_female_table$nCPMs_4)
nCPM3_nCPM4_female_table$nCPMs <- as.numeric(nCPM3_nCPM4_female_table$nCPMs)
nCPM3_nCPM4_female_table$nCPM_ratio <- nCPM3_nCPM4_female_table$nCPMs / nCPM3_nCPM4_female_table$nCPMs_4
# select for nCPM_ratio > 3
placenta_female_depleted <- nCPM3_nCPM4_female_table[nCPM3_nCPM4_female_table$nCPM_ratio >3,]
# replace geneid with ensembl
colnames(placenta_female_depleted) <- gsub("geneid", "ensembl", colnames(placenta_female_depleted))
# left join genecode and placenta_female_depleted
placenta_female_annotated <- dplyr::left_join(placenta_female_depleted, gencode, by = join_by(ensembl))
# tidy up placenta_female_annotated
placenta_female_annotated <- dplyr::select(placenta_female_annotated, -c("Rank.x", "Rank.y"))
library(pheatmap)
library(RColorBrewer)
# converting mean_tissue_cpms to geneid in rows
data_female <- t(mean_female_cpms) %>%
data.frame() %>%
tibble::rownames_to_column("geneid")
colnames(data_female) <- gsub("X1", "Female Heart", colnames(data_female))
colnames(data_female) <- gsub("X2", "Female Muscle", colnames(data_female))
colnames(data_female) <- gsub("X3", "Female Placenta", colnames(data_female))
colnames(data_female) <- gsub("X4", "Female Stomach", colnames(data_female))
data_female <- data_female[-1,]
# make data_female numeric
data_female$`Female Heart` <- as.numeric(data_female$`Female Heart`)
data_female$`Female Muscle` <- as.numeric(data_female$`Female Muscle`)
data_female$`Female Stomach` <- as.numeric(data_female$`Female Stomach`)
data_female$`Female Placenta` <- as.numeric(data_female$`Female Placenta`)
# convert geneid column into rows
data_female_2 <- data_female[,-1]
rownames(data_female_2) <- data_female[,1]
data_2_female_relocate <- dplyr::relocate(data_female_2, `Female Placenta`, .after = `Female Stomach`)
# descending order nCPMs
placenta_female_descending <- placenta_female_annotated %>%
dplyr::arrange(desc(nCPMs_4))
# create heatmap
pheatmap(log10(data_2_female_relocate[placenta_female_descending$ensembl,] + 0.001),
cluster_cols = FALSE,
cluster_rows = FALSE,
show_rownames = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)
library(limma)
library(Glimma)
library(RColorBrewer)
# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/count_preprocessing/rawData/combinedRaw"
heartFemale_file <- file.path(projectDir, "rawCounts_heartFemale.csv")
heartMale_file <- file.path(projectDir, "rawCounts_heartMale.csv")
muscleFemale_file <- file.path(projectDir, "rawCounts_muscleFemale.csv")
muscleMale_file <- file.path(projectDir, "rawCounts_muscleMale.csv")
stomachFemale_file <- file.path(projectDir, "rawCounts_stomachFemale.csv")
stomachMale_file <- file.path(projectDir, "rawCounts_stomachMale.csv")
stomachUnknown_file <- file.path(projectDir, "rawCounts_stomachUnknown.csv")
placentaFemale_file <- file.path(projectDir, "rawCounts_placentaFemale.csv")
placentaMale_file <- file.path(projectDir, "rawCounts_placentaMale.csv")
metaData_file <- file.path(projectDir, "metaData.csv")
gencode_file <- file.path(projectDir, "gencode_v32_gene_id_symbol_chr_biotype.csv")
# import the counts table
# heartFemale
heartFemale <- read_delim(file = heartFemale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# heartMale
heartMale <- read_delim(file = heartMale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# muscleFemale
muscleFemale <- read_delim(file = muscleFemale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# muscleMale
muscleMale <- read_delim(file = muscleMale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# stomachFemale
stomachFemale <- read_delim(file = stomachFemale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# stomachMale
stomachMale <- read_delim(file = stomachMale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# stomachUnknown
stomachUnknown <- read_delim(file = stomachUnknown_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# placentaFemale
placentaFemale <- read_delim(file = placentaFemale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# placentaMale
placentaMale <- read_delim(file = placentaMale_file,
col_names = TRUE,
delim = ",") %>%
dplyr::select(., ensemble = ...1, everything()) %>%
as.data.frame()
# metaData
metaData <- read_delim(file = metaData_file,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
#gencode
gencode <- read_delim(file = gencode_file,
col_names = TRUE,
delim = ",") %>%
as.data.frame()
# merge data to create total_rawCounts
total_rawCounts <- dplyr::full_join(heartFemale, heartMale, by = "ensemble") %>%
dplyr::full_join(.,muscleFemale, by = "ensemble") %>%
dplyr::full_join(.,muscleMale, by = "ensemble") %>%
dplyr::full_join(.,stomachFemale, by = "ensemble") %>%
dplyr::full_join(.,stomachMale, by = "ensemble") %>%
dplyr::full_join(.,stomachUnknown, by = "ensemble") %>%
dplyr::full_join(.,placentaFemale, by = "ensemble") %>%
dplyr::full_join(.,placentaMale, by = "ensemble") %>%
tibble::column_to_rownames("ensemble")
# replace any NA values with zero
total_rawCounts[is.na(total_rawCounts)] <- 0
# order
total_rawCounts <- total_rawCounts[,metaData$SRR_ID]
# subset gencode to only include protein coding genes
gencode_protein <- dplyr::filter(gencode, gene_type == "protein_coding")
# subset total_rawCounts to only include protein coding genes
rawCounts_protein <- subset(total_rawCounts, rownames(total_rawCounts) %in% gencode_protein$ensembl)
dge_object <- edgeR::DGEList(
counts = rawCounts_protein,
samples = metaData,
group = metaData$Tissue,
genes = rownames(rawCounts_protein))
# TMM normalisation
dge_object_norm <- calcNormFactors(dge_object,
method = "TMM")
median(dge_object_norm$samples$lib.size)
# convert normalised counts into CPM
cpm_dgeList <- cpm(dge_object_norm, log = FALSE)
# logCPM
lcpm_dgeList <- cpm(dge_object_norm, log = TRUE)
# mean and median of samples in dge_list_object
L <- mean(dge_object_norm$samples$lib.size) * 1e-6
M <- median(dge_object_norm$samples$lib.size) * 1e-6
c(L, M)
# summary statistics of logCPMs
summary(lcpm_dgeList)
# pre-plot processing
dge_unnorm <- dge_object
dge_norm <- dge_object_norm
# box plot of unnormalised expression distribution
par(mfrow=c(1,2))
lcpm_unnorm <- cpm(dge_unnorm, log=TRUE)
boxplot(lcpm_unnorm, ylab="Log-cpm", las=2, col=blues9, main="Unnormalised data")
# box plot of normalised expression distribution
lcpm_norm <- cpm(dge_norm, log=TRUE)
boxplot(lcpm_norm, ylab="Log-cpm", las=2, col=blues9, main="Normalised Data")
lcpm <- cpm(dge_object_norm, log = TRUE)
par(mfrow=c(1,2))
col.group <- dge_object_norm$Tissues
col.group <- as.character(col.group)
col.lane <- dge_object_norm$Tissues
col.lane <- as.character(col.lane)
plotMDS(lcpm, labels=dge_object_norm$Tissues, col=blues9, main="Tissues")
plotMDS(lcpm, main="Tissues", labels=dge_object_norm$Tissues, col=blues9, dim=c(3,4))
# make a dge object for rawCounts
raw_dge_object <- edgeR::DGEList(
counts = total_rawCounts,
samples = metaData,
group = metaData$Tissue,
genes = rownames(total_rawCounts))
# TMM normalisation
raw_dge_object_norm <- calcNormFactors(raw_dge_object,
method = "TMM")
# convert normalised counts into CPM
raw_cpm_dgeList <- cpm(raw_dge_object_norm, log = TRUE)
# make cpm_dgelist a dataframe and convert rows to column
raw_cpm_dgeList <- as.data.frame(raw_cpm_dgeList) %>%
tibble::rownames_to_column("ensembl")
# filter for xist and sry genes
raw_cpm_filtered <- dplyr::filter(raw_cpm_dgeList, ensembl == "ENSG00000184895" | ensembl == "ENSG00000229807")
# incorperate metadata
cpm_sexDetermination <- t(raw_cpm_filtered) %>%
data.frame()
colnames(cpm_sexDetermination) <- c("ENSG00000229807", "ENSG00000184895")
cpm_sex <- cpm_sexDetermination[-1,]
cpm_sex <- tibble::rownames_to_column(cpm_sex,"SRR_ID")
cpm_meta <- dplyr::left_join(cpm_sex, raw_dge_object_norm$samples[, c("SRR_ID", "Sex")], by = join_by(SRR_ID))
# convert to long table
cpm_plot <- tidyr::gather(cpm_meta, Gene, counts, ENSG00000184895, ENSG00000229807)
# plot xist and sry
cpm_plot %>% ggplot(., aes(x = Gene,
y = counts)) +
geom_point(aes(colour=factor(Sex)))
summary(dge_object_norm$samples$lib.size)
View(dge_object_norm)
View(dge_object_norm[["samples"]])
summary(dge_object_norm$samples$placenta$lib.size)
summary(dge_object_norm$samples$lib.size$placenta)
summary(dge_object_norm$samples$lib.size)
View(dge_object_norm)
View(dge_object_norm[["samples"]])
View(dge_object_norm)
View(dge_object_norm[["samples"]])
View(dge_object)
samples
summary(cpm_dgeList$samples$lib.size)
View(cpm_dgeList)
View(cpm_dgeList)
colSums(cpm_dgeList)
summary(colSums(cpm_dgeList))
View(data_2_male_relocate)
rowsum(data_2_male_relocate)
rowsum(data_2_male_relocate$`Male Heart`)
View(data_female)
nrow(data_female)
View(rawCounts_protein)
nrow(rawCounts_protein)
View(dge_object_norm)
View(mean_female_cpms)
View(ranked_female)
colSums(mean_female_cpms)
colSums(mean_female_cpms[,-1])
summary(colSums(mean_female_cpms[,-1]))
View(mean_female_cpms)
View(mean_female_cpms)
View(placenta_female_annotated)
View(placentaFemale)
# use the edgeR built in function `cpm()` to make a new table of cpm counts
cpms <- edgeR::cpm(dge_object_norm, log = FALSE)
# remove SRR5309850
cpms <- cpms[,-27]
# use the cpms dataframe to grab all the ensembl IDs for the genes
genes_to_average <- rownames(cpms)
# create a new object for the mean cpms
# first step is to transform the matrix (flip it 90' so genes are now in the columns and samples are in the rows)
mean_cpms <- t(cpms) %>%
# make sure you have a data frame
data.frame() %>%
# move the samplenames into a column (we need this to join the metadata table)
tibble::rownames_to_column("SRR_ID") %>%
# join the counts and the metadata table (but we only want the samplename and tissue columns for your data so we're subsetting using the square brackets)
dplyr::left_join(., dge_object_norm$samples[, c("SRR_ID", "Tissue")], by = join_by(SRR_ID)) %>%
# drop the samplename column again (it was added by the join)
dplyr::select(., -SRR_ID) %>%
# group by the column of interest. Here I've use the "sex_outcome" column but in your data it will be the "tissue" column
group_by(Tissue) %>%
# calculate the mean cpms of all genes (using the ensembl gene vector we made earlier)
dplyr::summarise_at(vars(genes_to_average), mean)
View(mean_cpms)
rowSums(mean_cpms, Tissue)
rowSums(mean_cpms, Heart)
rowSums(mean_cpms$Tissue)
rowSums(mean_cpms, 1)
rowSums(mean_cpms,.)
View(ranked_male_cpms)
View(ranked_female)
View(nCPMs_male)
