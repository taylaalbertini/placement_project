---
title: "DGEobject"
output: html_document
date: "2023-09-26"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# load libraries
```{r}
library(plyr)
library(reshape2)
library(dplyr)
library(stringr)
library(readxl)
library(readr)
library(magrittr)
library(ggplot2)
library(edgeR)

# set project directory
projectDir <- "/Users/taylaalbertini/Desktop/R studio/count_preprocessing/rawData/combinedRaw"
heartFemale_file <- file.path(projectDir, "rawCounts_heartFemale.csv")
heartMale_file <- file.path(projectDir, "rawCounts_heartMale.csv")
muscleFemale_file <- file.path(projectDir, "rawCounts_muscleFemale.csv")
muscleMale_file <- file.path(projectDir, "rawCounts_muscleMale.csv")
stomachFemale_file <- file.path(projectDir, "rawCounts_stomachFemale.csv")
stomachMale_file <- file.path(projectDir, "rawCounts_stomachMale.csv")
stomachUnknown_file <- file.path(projectDir, "rawCounts_stomachUnknown.csv")
placentaFemale_file <- file.path(projectDir, "rawCounts_placentaFemale.csv")
placentaMale_file <- file.path(projectDir, "rawCounts_placentaMale.csv")
metaData_file <- file.path(projectDir, "metaData.csv")
gencode_file <- file.path(projectDir, "gencode_v32_gene_id_symbol_chr_biotype.csv")
```

# import rawCounts
```{r}
# import the counts table
# heartFemale
heartFemale <- read_delim(file = heartFemale_file,
                           col_names = TRUE, 
                          delim = ",") %>%
   dplyr::select(., ensemble = ...1, everything()) %>%
   as.data.frame()

# heartMale
heartMale <- read_delim(file = heartMale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# muscleFemale
muscleFemale <- read_delim(file = muscleFemale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# muscleMale
muscleMale <- read_delim(file = muscleMale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# stomachFemale
stomachFemale <- read_delim(file = stomachFemale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# stomachMale
stomachMale <- read_delim(file = stomachMale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# stomachUnknown
stomachUnknown <- read_delim(file = stomachUnknown_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# placentaFemale
placentaFemale <- read_delim(file = placentaFemale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# placentaMale
placentaMale <- read_delim(file = placentaMale_file,
                           col_names = TRUE,
                           delim = ",") %>%
  dplyr::select(., ensemble = ...1, everything()) %>%
  as.data.frame()

# metaData
metaData <- read_delim(file = metaData_file,
                           col_names = TRUE,
                           delim = ",") %>%
  as.data.frame()

#gencode
gencode <- read_delim(file = gencode_file,
                       col_names = TRUE,
                       delim = ",") %>%
  as.data.frame()
```

# merge data using dplyr outer join
```{r}
# merge data to create total_rawCounts
total_rawCounts <- dplyr::full_join(heartFemale, heartMale, by = "ensemble") %>%
  dplyr::full_join(.,muscleFemale, by = "ensemble") %>%
  dplyr::full_join(.,muscleMale, by = "ensemble") %>%
  dplyr::full_join(.,stomachFemale, by = "ensemble") %>%
  dplyr::full_join(.,stomachMale, by = "ensemble") %>%
  dplyr::full_join(.,stomachUnknown, by = "ensemble") %>%
  dplyr::full_join(.,placentaFemale, by = "ensemble") %>%
  dplyr::full_join(.,placentaMale, by = "ensemble") %>%
  tibble::column_to_rownames("ensemble")

# replace any NA values with zero
total_rawCounts[is.na(total_rawCounts)] <- 0

# order
total_rawCounts <- total_rawCounts[,metaData$SRR_ID]

# subset gencode to only include protein coding genes
gencode_protein <- dplyr::filter(gencode, gene_type == "protein_coding")

# subset total_rawCounts to only include protein coding genes
rawCounts_protein <- subset(total_rawCounts, rownames(total_rawCounts) %in% gencode_protein$ensembl)
```

# creating DGEobject
```{r}
dge_list_object <- edgeR::DGEList(
  counts = rawCounts_protein,
  samples = metaData,
  group = metaData$Tissue,
  genes = rownames(rawCounts_protein))
```



# normalisation of the DGEobject
```{r}
dge_list_object <- calcNormFactors(dge_list_object,
                                        method = "TMM")
```






